// Code generated by protoc-gen-go-hashpb. DO NOT EDIT.
// protoc-gen-go-hashpb
// Source: internal/pb/all_types.proto

package pb

import (
	hash "hash"
)

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *TestAllTypes) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_hashpb_test_TestAllTypes_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *TestAllTypes_NestedMessage) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_hashpb_test_TestAllTypes_NestedMessage_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *NestedTestAllTypes) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_hashpb_test_NestedTestAllTypes_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *TestAllTypesOptional) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_hashpb_test_TestAllTypesOptional_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *TestAllTypesOptional_NestedMessage) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_hashpb_test_TestAllTypesOptional_NestedMessage_hashpb_sum(m, hasher, ignore)
	}
}
